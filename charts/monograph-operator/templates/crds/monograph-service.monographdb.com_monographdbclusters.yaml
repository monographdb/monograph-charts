---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: monographdbclusters.monograph-service.monographdb.com
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "monograph-operator.name" . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
    {{- if .Values.keepCrds }}
    "helm.sh/resource-policy": keep
    {{- end }}
  labels:
    {{- include "monograph-operator.commonLabels" . | nindent 4 }}
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "monograph-operator.name" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: monograph-service.monographdb.com
  names:
    categories:
    - all
    - monograph-db
    kind: MonographDBCluster
    listKind: MonographDBClusterList
    plural: monographdbclusters
    shortNames:
    - monograph
    singular: monographdbcluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MonographDBCluster is the CRD for the MonographDB clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MonographDBClusterSpec defines the desired state of a MonographDBCluster
            properties:
              log:
                description: LogService spec
                properties:
                  clusterWatcherServiceURL:
                    default: http://cluster-watcher-srv.mono-cluster-watcher-system.svc.cluster.local:9000/api/v1/get-pod-zone
                    description: ClusterWatcherURL
                    type: string
                  crossZone:
                    default: false
                    description: CrossZone If configured, the service is deployed
                      across availability zones.
                    type: boolean
                  dataStore:
                    description: MonographDB storage configuration
                    properties:
                      hostPath:
                        description: (Optional) Directory from the host node's filesystem
                        properties:
                          path:
                            description: 'path of the directory on the host. If the
                              path is a symlink, it will follow the link to the real
                              path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                          type:
                            description: 'type for HostPath Volume Defaults to ""
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                        required:
                        - path
                        type: object
                      pvc:
                        description: (Optional) Persistent volume to use
                        properties:
                          source:
                            description: (Optional) Existing PVC in the same namespace
                            properties:
                              claimName:
                                description: 'claimName is the name of a PersistentVolumeClaim
                                  in the same namespace as the pod using this volume.
                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                type: string
                              readOnly:
                                description: readOnly Will force the ReadOnly setting
                                  in VolumeMounts. Default false.
                                type: boolean
                            required:
                            - claimName
                            type: object
                          spec:
                            description: (Optional) PVC to request a new persistent
                              volume
                            properties:
                              accessModes:
                                description: 'accessModes contains the desired access
                                  modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              dataSource:
                                description: 'dataSource field can be used to specify
                                  either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                  * An existing PVC (PersistentVolumeClaim) If the
                                  provisioner or an external controller can support
                                  the specified data source, it will create a new
                                  volume based on the contents of the specified data
                                  source. When the AnyVolumeDataSource feature gate
                                  is enabled, dataSource contents will be copied to
                                  dataSourceRef, and dataSourceRef contents will be
                                  copied to dataSource when dataSourceRef.namespace
                                  is not specified. If the namespace is specified,
                                  then dataSourceRef will not be copied to dataSource.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                                x-kubernetes-map-type: atomic
                              dataSourceRef:
                                description: 'dataSourceRef specifies the object from
                                  which to populate the volume with data, if a non-empty
                                  volume is desired. This may be any object from a
                                  non-empty API group (non core object) or a PersistentVolumeClaim
                                  object. When this field is specified, volume binding
                                  will only succeed if the type of the specified object
                                  matches some installed volume populator or dynamic
                                  provisioner. This field will replace the functionality
                                  of the dataSource field and as such if both fields
                                  are non-empty, they must have the same value. For
                                  backwards compatibility, when namespace isn''t specified
                                  in dataSourceRef, both fields (dataSource and dataSourceRef)
                                  will be set to the same value automatically if one
                                  of them is empty and the other is non-empty. When
                                  namespace is specified in dataSourceRef, dataSource
                                  isn''t set to the same value and must be empty.
                                  There are three important differences between dataSource
                                  and dataSourceRef: * While dataSource only allows
                                  two specific types of objects, dataSourceRef allows
                                  any non-core object, as well as PersistentVolumeClaim
                                  objects. * While dataSource ignores disallowed values
                                  (dropping them), dataSourceRef preserves all values,
                                  and generates an error if a disallowed value is
                                  specified. * While dataSource only allows local
                                  objects, dataSourceRef allows objects in any namespaces.
                                  (Beta) Using this field requires the AnyVolumeDataSource
                                  feature gate to be enabled. (Alpha) Using the namespace
                                  field of dataSourceRef requires the CrossNamespaceVolumeDataSource
                                  feature gate to be enabled.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                  namespace:
                                    description: Namespace is the namespace of resource
                                      being referenced Note that when a namespace
                                      is specified, a gateway.networking.k8s.io/ReferenceGrant
                                      object is required in the referent namespace
                                      to allow that namespace's owner to accept the
                                      reference. See the ReferenceGrant documentation
                                      for details. (Alpha) This field requires the
                                      CrossNamespaceVolumeDataSource feature gate
                                      to be enabled.
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              resources:
                                description: 'resources represents the minimum resources
                                  the volume should have. If RecoverVolumeExpansionFailure
                                  feature is enabled users are allowed to specify
                                  resource requirements that are lower than previous
                                  value but must still be higher than capacity recorded
                                  in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. Requests cannot
                                      exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              selector:
                                description: selector is a label query over volumes
                                  to consider for binding.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              storageClassName:
                                description: 'storageClassName is the name of the
                                  StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeAttributesClassName:
                                description: 'volumeAttributesClassName may be used
                                  to set the VolumeAttributesClass used by this claim.
                                  If specified, the CSI driver will create or update
                                  the volume with the attributes defined in the corresponding
                                  VolumeAttributesClass. This has a different purpose
                                  than storageClassName, it can be changed after the
                                  claim is created. An empty string value means that
                                  no VolumeAttributesClass will be applied to the
                                  claim but it''s not allowed to reset this field
                                  to empty string once it is set. If unspecified and
                                  the PersistentVolumeClaim is unbound, the default
                                  VolumeAttributesClass will be set by the persistentvolume
                                  controller if it exists. If the resource referred
                                  to by volumeAttributesClass does not exist, this
                                  PersistentVolumeClaim will be set to a Pending state,
                                  as reflected by the modifyVolumeStatus field, until
                                  such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                                  (Alpha) Using this field requires the VolumeAttributesClass
                                  feature gate to be enabled.'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume
                                  is required by the claim. Value of Filesystem is
                                  implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: volumeName is the binding reference to
                                  the PersistentVolume backing this claim.
                                type: string
                            type: object
                        type: object
                    type: object
                  dnsConfig:
                    description: Specifies the DNS parameters of a pod.
                    properties:
                      nameservers:
                        description: A list of DNS name server IP addresses. This
                          will be appended to the base nameservers generated from
                          DNSPolicy. Duplicated nameservers will be removed.
                        items:
                          type: string
                        type: array
                      options:
                        description: A list of DNS resolver options. This will be
                          merged with the base options generated from DNSPolicy. Duplicated
                          entries will be removed. Resolution options given in Options
                          will override those that appear in the base DNSPolicy.
                        items:
                          description: PodDNSConfigOption defines DNS resolver options
                            of a pod.
                          properties:
                            name:
                              description: Required.
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      searches:
                        description: A list of DNS search domains for host-name lookup.
                          This will be appended to the base search paths generated
                          from DNSPolicy. Duplicated search paths will be removed.
                        items:
                          type: string
                        type: array
                    type: object
                  enableMetrics:
                    default: "off"
                    description: 'If specified, enable metrics Default: off'
                    type: string
                  image:
                    description: Image of the MonographDB component.  (Log/Tx)
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: 'PullPolicy for the image, which defaults to IfNotPresent.
                      Default: IfNotPresent'
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                  imagePullSecrets:
                    description: (Optional) Secret name containing the dockerconfig
                      to use for a registry that requires authentication. The secret
                      must be configured first by the user.
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  logGroup:
                    default: 1
                    description: 'LogGroup raft group size of LogService. Default:
                      1'
                    format: int32
                    type: integer
                    x-kubernetes-validations:
                    - message: For now LogReplica is immutable
                      rule: self == oldSelf
                  logReplica:
                    default: 3
                    description: 'Number of members in the LogGroup Default: 3'
                    format: int32
                    type: integer
                    x-kubernetes-validations:
                    - message: For now LogReplica is immutable
                      rule: self == oldSelf
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    default: 10%
                    description: 'The maximum number of pods that can be unavailable
                      during a rolling update. Default: 10%'
                    x-kubernetes-int-or-string: true
                  resources:
                    description: Resources of the MonographDB component.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  rocksdbCloud:
                    description: RocksDBCloud Related settings of RocksDBCloud.
                    properties:
                      cloudObjectStorage:
                        description: CloudObjectStoreSpec
                        properties:
                          bucketName:
                            description: BucketName
                            type: string
                          bucketPrefix:
                            description: BucketPrefix
                            type: string
                          cloudStoreType:
                            description: Cloud provider object storage type, s3 (aws
                              s3) or gcs (google cloud storage)
                            type: string
                          region:
                            description: Region Cloud provider object storage region
                            type: string
                        required:
                        - bucketName
                        - bucketPrefix
                        - region
                        type: object
                      fileDeletionDelay:
                        default: 3600
                        description: FileDeletionDelay The file deletion delay for
                          RocksDB Cloud files
                        format: int32
                        type: integer
                      readyTimeout:
                        default: 10
                        description: ReadyTimeout Timeout before RocksDB Cloud becoming
                          ready on new log group leader
                        format: int32
                        type: integer
                      sstFileCacheSize:
                        default: 3GB
                        description: SSTFileCacheSize Local sst cache size
                        type: string
                    required:
                    - cloudObjectStorage
                    type: object
                  rpcPort:
                    default: 7001
                    description: 'RPC Port of the LogService. Default: 7001'
                    format: int32
                    type: integer
                  schedulePolicy:
                    description: SchedulePolicy Specifies the scheduling policy for
                      the service(TxService/LogService).
                    properties:
                      labelSelector:
                        description: LabelSelector is used to find matching nodes
                          or pods by labels.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      policyType:
                        default: preferred
                        description: 'PolicyType The scheduling policy type is used
                          to specify the behavior of the controller when the resource
                          does not meet the scheduling policy.. Default: required'
                        enum:
                        - preferred
                        - required
                        type: string
                      preferredZone:
                        description: PreferredZone If configured, the service prefers
                          to be deployed in that availability zone.
                        type: string
                    required:
                    - preferredZone
                    type: object
                  serviceAccountName:
                    description: ServiceAccountName For accessing aws resources. (DynamoDB,
                      EBS, ELB)
                    type: string
                  storageClassDiskType:
                    default: gp3
                    description: 'Cloud provisioned network storage disk type Default:
                      gp3'
                    type: string
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  version:
                    description: Version of MonographDB.
                    type: string
                required:
                - dataStore
                - image
                - rocksdbCloud
                - serviceAccountName
                type: object
              store:
                description: StorageService spec
                properties:
                  properties:
                    description: Other meta information, e.g., aws_access_key, aws_secret_key.
                    items:
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  storageType:
                    description: 'KV storage type: bigtable, cass (cassandra), or
                      dynamo (dynamodb)'
                    enum:
                    - bigtable
                    - cass
                    - dynamo
                    type: string
                required:
                - storageType
                type: object
              timezone:
                description: TimeZone
                type: string
              tx:
                description: TxService spec
                properties:
                  ccNodePort:
                    default: 8020
                    description: 'CCNode port Default: 8020'
                    format: int32
                    type: integer
                  ccStreamPort:
                    default: 8010
                    description: 'CCStream port Default: 8010'
                    format: int32
                    type: integer
                  checkpoint:
                    default:
                      delaySecond: 5
                      intervalSecond: 10
                    description: Checkpoint config of TxService
                    properties:
                      delaySecond:
                        default: 5
                        description: 'The time which ckpt_ts is less than min lock
                          ts case mvcc is enabled. (Unit: second) Default: 5'
                        format: int32
                        type: integer
                      intervalSecond:
                        default: 10
                        description: 'Interval time of checkpointer. (Unit: second)
                          Default: 10'
                        format: int32
                        type: integer
                    type: object
                  dataStore:
                    description: MonographDB storage configuration
                    properties:
                      hostPath:
                        description: (Optional) Directory from the host node's filesystem
                        properties:
                          path:
                            description: 'path of the directory on the host. If the
                              path is a symlink, it will follow the link to the real
                              path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                          type:
                            description: 'type for HostPath Volume Defaults to ""
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                        required:
                        - path
                        type: object
                      pvc:
                        description: (Optional) Persistent volume to use
                        properties:
                          source:
                            description: (Optional) Existing PVC in the same namespace
                            properties:
                              claimName:
                                description: 'claimName is the name of a PersistentVolumeClaim
                                  in the same namespace as the pod using this volume.
                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                type: string
                              readOnly:
                                description: readOnly Will force the ReadOnly setting
                                  in VolumeMounts. Default false.
                                type: boolean
                            required:
                            - claimName
                            type: object
                          spec:
                            description: (Optional) PVC to request a new persistent
                              volume
                            properties:
                              accessModes:
                                description: 'accessModes contains the desired access
                                  modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              dataSource:
                                description: 'dataSource field can be used to specify
                                  either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                  * An existing PVC (PersistentVolumeClaim) If the
                                  provisioner or an external controller can support
                                  the specified data source, it will create a new
                                  volume based on the contents of the specified data
                                  source. When the AnyVolumeDataSource feature gate
                                  is enabled, dataSource contents will be copied to
                                  dataSourceRef, and dataSourceRef contents will be
                                  copied to dataSource when dataSourceRef.namespace
                                  is not specified. If the namespace is specified,
                                  then dataSourceRef will not be copied to dataSource.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                                x-kubernetes-map-type: atomic
                              dataSourceRef:
                                description: 'dataSourceRef specifies the object from
                                  which to populate the volume with data, if a non-empty
                                  volume is desired. This may be any object from a
                                  non-empty API group (non core object) or a PersistentVolumeClaim
                                  object. When this field is specified, volume binding
                                  will only succeed if the type of the specified object
                                  matches some installed volume populator or dynamic
                                  provisioner. This field will replace the functionality
                                  of the dataSource field and as such if both fields
                                  are non-empty, they must have the same value. For
                                  backwards compatibility, when namespace isn''t specified
                                  in dataSourceRef, both fields (dataSource and dataSourceRef)
                                  will be set to the same value automatically if one
                                  of them is empty and the other is non-empty. When
                                  namespace is specified in dataSourceRef, dataSource
                                  isn''t set to the same value and must be empty.
                                  There are three important differences between dataSource
                                  and dataSourceRef: * While dataSource only allows
                                  two specific types of objects, dataSourceRef allows
                                  any non-core object, as well as PersistentVolumeClaim
                                  objects. * While dataSource ignores disallowed values
                                  (dropping them), dataSourceRef preserves all values,
                                  and generates an error if a disallowed value is
                                  specified. * While dataSource only allows local
                                  objects, dataSourceRef allows objects in any namespaces.
                                  (Beta) Using this field requires the AnyVolumeDataSource
                                  feature gate to be enabled. (Alpha) Using the namespace
                                  field of dataSourceRef requires the CrossNamespaceVolumeDataSource
                                  feature gate to be enabled.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                  namespace:
                                    description: Namespace is the namespace of resource
                                      being referenced Note that when a namespace
                                      is specified, a gateway.networking.k8s.io/ReferenceGrant
                                      object is required in the referent namespace
                                      to allow that namespace's owner to accept the
                                      reference. See the ReferenceGrant documentation
                                      for details. (Alpha) This field requires the
                                      CrossNamespaceVolumeDataSource feature gate
                                      to be enabled.
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              resources:
                                description: 'resources represents the minimum resources
                                  the volume should have. If RecoverVolumeExpansionFailure
                                  feature is enabled users are allowed to specify
                                  resource requirements that are lower than previous
                                  value but must still be higher than capacity recorded
                                  in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. Requests cannot
                                      exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              selector:
                                description: selector is a label query over volumes
                                  to consider for binding.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              storageClassName:
                                description: 'storageClassName is the name of the
                                  StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeAttributesClassName:
                                description: 'volumeAttributesClassName may be used
                                  to set the VolumeAttributesClass used by this claim.
                                  If specified, the CSI driver will create or update
                                  the volume with the attributes defined in the corresponding
                                  VolumeAttributesClass. This has a different purpose
                                  than storageClassName, it can be changed after the
                                  claim is created. An empty string value means that
                                  no VolumeAttributesClass will be applied to the
                                  claim but it''s not allowed to reset this field
                                  to empty string once it is set. If unspecified and
                                  the PersistentVolumeClaim is unbound, the default
                                  VolumeAttributesClass will be set by the persistentvolume
                                  controller if it exists. If the resource referred
                                  to by volumeAttributesClass does not exist, this
                                  PersistentVolumeClaim will be set to a Pending state,
                                  as reflected by the modifyVolumeStatus field, until
                                  such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                                  (Alpha) Using this field requires the VolumeAttributesClass
                                  feature gate to be enabled.'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume
                                  is required by the claim. Value of Filesystem is
                                  implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: volumeName is the binding reference to
                                  the PersistentVolume backing this claim.
                                type: string
                            type: object
                        type: object
                    type: object
                  dnsConfig:
                    description: Specifies the DNS parameters of a pod.
                    properties:
                      nameservers:
                        description: A list of DNS name server IP addresses. This
                          will be appended to the base nameservers generated from
                          DNSPolicy. Duplicated nameservers will be removed.
                        items:
                          type: string
                        type: array
                      options:
                        description: A list of DNS resolver options. This will be
                          merged with the base options generated from DNSPolicy. Duplicated
                          entries will be removed. Resolution options given in Options
                          will override those that appear in the base DNSPolicy.
                        items:
                          description: PodDNSConfigOption defines DNS resolver options
                            of a pod.
                          properties:
                            name:
                              description: Required.
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      searches:
                        description: A list of DNS search domains for host-name lookup.
                          This will be appended to the base search paths generated
                          from DNSPolicy. Duplicated search paths will be removed.
                        items:
                          type: string
                        type: array
                    type: object
                  enableFlushHosts:
                    default: false
                    description: 'Is the execution of "flush host" command in probe
                      related mostly to :https://jira.mariadb.org/browse/MDEV-21456)
                      Default: false'
                    type: boolean
                  enableMetrics:
                    default: "off"
                    description: 'If specified, enable metrics Default: off'
                    type: string
                  externalIps:
                    description: TxService external Ip
                    items:
                      type: string
                    type: array
                  image:
                    description: Image of the MonographDB component.  (Log/Tx)
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: 'PullPolicy for the image, which defaults to IfNotPresent.
                      Default: IfNotPresent'
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                  imagePullSecrets:
                    description: (Optional) Secret name containing the dockerconfig
                      to use for a registry that requires authentication. The secret
                      must be configured first by the user.
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  keySpaceName:
                    default: mono
                    description: MonographDB keyspace of KV storage
                    type: string
                  maxConnections:
                    default: 1000
                    description: 'Maximum number of connections allowed to the MonographDB
                      Default: 1000'
                    format: int32
                    type: integer
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    default: 10%
                    description: 'The maximum number of pods that can be unavailable
                      during a rolling update. Default: 10%'
                    x-kubernetes-int-or-string: true
                  metricPort:
                    default: 18081
                    description: 'Metrics collector Port number Default: 18081'
                    format: int32
                    type: integer
                  replayPort:
                    default: 8030
                    description: 'replay port Default: 8030'
                    format: int32
                    type: integer
                  replica:
                    default: 3
                    description: 'Replicas of Pods TxService. Default: 3'
                    format: int32
                    type: integer
                    x-kubernetes-validations:
                    - message: For now TxService Replica is immutable
                      rule: self == oldSelf
                  resources:
                    description: Resources of the MonographDB component.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  schedulePolicy:
                    description: SchedulePolicy Specifies the scheduling policy for
                      the service(TxService/LogService).
                    properties:
                      labelSelector:
                        description: LabelSelector is used to find matching nodes
                          or pods by labels.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      policyType:
                        default: preferred
                        description: 'PolicyType The scheduling policy type is used
                          to specify the behavior of the controller when the resource
                          does not meet the scheduling policy.. Default: required'
                        enum:
                        - preferred
                        - required
                        type: string
                      preferredZone:
                        description: PreferredZone If configured, the service prefers
                          to be deployed in that availability zone.
                        type: string
                    required:
                    - preferredZone
                    type: object
                  serviceAccountName:
                    description: ServiceAccountName For accessing aws resources. (DynamoDB,
                      EBS, ELB)
                    type: string
                  sqlPort:
                    default: 3300
                    description: 'The SQL Port number Default: 3300'
                    format: int32
                    type: integer
                  storageClassDiskType:
                    default: gp3
                    description: 'Cloud provisioned network storage disk type Default:
                      gp3'
                    type: string
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  transaction:
                    default:
                      enableMVCC: "off"
                      isolation: READ-COMMITTED
                      protocol: OCC
                    description: Transaction config of TxService
                    properties:
                      enableMVCC:
                        default: "OFF"
                        description: 'Whether to enable MVCC. Default: OFF'
                        type: string
                      isolation:
                        default: READ-COMMITTED
                        description: 'Transaction Isolation Level Default: READ-COMMITTED'
                        type: string
                      protocol:
                        default: OCC
                        description: 'Transaction implementation protocol occ or locking.
                          Default: OCC'
                        type: string
                    type: object
                  version:
                    description: Version of MonographDB.
                    type: string
                required:
                - dataStore
                - image
                - serviceAccountName
                type: object
            required:
            - log
            - store
            - tx
            type: object
          status:
            description: MonographDBClusterStatus defines the observed state of MonographDBCluster
            properties:
              checkedVersion:
                default: false
                description: 'Whether to check the MonographDB version. Default: false'
                type: boolean
              clusterName:
                description: Cluster name of the MonographDB cluster.
                type: string
              clusterStatus:
                default: MonoClusterNotReady
                description: 'Status of the MonographDB operator Default: MonoClusterNotReady'
                type: string
              conditions:
                description: condition of list MonographDB status change
                items:
                  properties:
                    lastTransitionTime:
                      description: The time when the condition was updated.
                      format: date-time
                      type: string
                    status:
                      description: MonographCluster condition status.
                      type: string
                    type:
                      description: Type of the MonographDB cluster
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              logStatus:
                default: LogSrvNotReady
                description: Status of the MonographDB LogService
                type: string
              observedGeneration:
                description: Observed generation by controller. It will be updated
                  when controller observes the changes on the spec and going to sync
                  the subresources.
                format: int64
                type: integer
              storageStatus:
                default: StorageSrvRunning
                description: Status of the external storage service(DynamoDB | Cassandra).
                type: string
              txStatus:
                default: TxSrvNotReady
                description: Status of the MonographDB LogService
                type: string
            required:
            - clusterName
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
