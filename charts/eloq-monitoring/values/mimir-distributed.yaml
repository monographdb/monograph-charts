{{- if .Values.mimir-distribute.enable }}
serviceAccount:
  create: false
  name: {{ .Values.global.serviceAccount.name }}

mimir:
  structuredConfig:
    common:
      storage:
        backend: s3
        s3:
          endpoint: {{ .Values.aws.s3.endpoint }}
          region: {{ .Values.aws.region }}
    blocks_storage:
      tsdb:
        dir: /data/tsdb
        block_ranges_period: [ 2h ]
        retention_period: 13h
        wal_replay_concurrency: 3
      bucket_store:
        sync_dir: /data/tsdb-sync
      s3:
        bucket_name: {{ .Values.mimir-distributed.blocks_storage.bucket_name }}
    alertmanager_storage:
      s3:
        bucket_name: {{ .Values.mimir-distributed.alertmanager_storage.bucket_name }}
    ruler_storage:
      s3:
        bucket_name: {{ .Values.mimir-distributed.ruler_storage.bucket_name }}
    limits:
      # Limit queries to 500 days. You can override this on a per-tenant basis.
      max_total_query_length: 12000h
      # Adjust max query parallelism to 16x sharding, without sharding we can run 15d queries fully in parallel.
      # With sharding we can further shard each day another 16 times. 15 days * 16 shards = 240 subqueries.
      max_query_parallelism: 240
      # Avoid caching results newer than 10m because some samples can be delayed
      # This presents caching incomplete results
      max_cache_freshness: 10m
      # Enable TSDB block upload
      compactor_block_upload_enabled: true
      compactor_blocks_retention_period: 1y

      ingestion_rate: 200000
      ingestion_burst_size: 200000

      max_global_series_per_user: 1500000
      max_fetched_series_per_query: 100000

      out_of_order_time_window: 1h
      out_of_order_blocks_external_label_enabled: true

    compactor:
      compaction_interval: 30m  # 1h
      deletion_delay: 12h
      tenant_cleanup_delay: 6h
      max_closing_blocks_concurrency: 2
      max_opening_blocks_concurrency: 4
      symbols_flushers_concurrency: 4
      first_level_compaction_wait_period: 25m
      data_dir: /data
      sharding_ring:
        wait_stability_min_duration: 1m

alertmanager:
  enabled: true
  replicas: 1
  statefulSet:
    enabled: true
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
  persistentVolume:
    enabled: true
    size: 1Gi
    storageClass: {{ .Values.mimir-distributed.storageClass }}
  zoneAwareReplication:
    enabled: false

distributor:
  replicas: 1

  resources:
    requests:
      cpu: 100m
      memory: 512Mi

ingester:
  replicas: 3
  statefulSet:
    enabled: true
  resources:
    limits:
      memory: 12Gi
    requests:
      cpu: 2
      memory: 8Gi
  persistentVolume:
    enabled: true
    size: 128Gi
    storageClass: {{ .Values.mimir-distributed.storageClass }}
  zoneAwareReplication:
    enabled: false

overrides_exporter:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

ruler:
  enabled: true
  replicas: 1

  resources:
    requests:
      cpu: 100m
      memory: 128Mi

query_frontend:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

query_scheduler:
  enabled: true
  replicas: 2

  resources:
    requests:
      cpu: 100m
      memory: 128Mi

store_gateway:
  replicas: 1
  persistentVolume:
    enabled: true
    size: 2Gi
    storageClass: {{ .Values.mimir-distributed.storageClass }}

  zoneAwareReplication:
    enabled: false

compactor:
  replicas: 1
  resources:
    limits:
      memory: 2.5Gi
    requests:
      cpu: 1
      memory: 1.5Gi
  persistentVolume:
    enabled: true
    size: 24Gi
    storageClass: {{ .Values.mimir-distributed.storageClass }}

chunks-cache:
  enabled: false

index-cache:
  enabled: false

metadata-cache:
  enabled: false

results-cache:
  enabled: false

rollout_operator:
  enabled: true

minio:
  enabled: false

nginx:
  enabled: false

gateway:
  enabledNonEnterprise: true
  replicas: 1

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 70

  prometheusRule:
    enabled: false

  grafanaAgent:
    enabled: false

enterprise:
  enabled: false

# Planning capacity for Grafana Mimir components https://grafana.com/docs/mimir/latest/manage/run-production-environment/planning-capacity/
# Production tips https://grafana.com/docs/mimir/latest/manage/run-production-environment/production-tips/
# TODO: Supporting caching is necessary in production.
{{- end }}
